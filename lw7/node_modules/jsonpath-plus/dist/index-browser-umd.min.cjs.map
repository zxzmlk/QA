{"version":3,"file":"index-browser-umd.min.cjs","sources":["../src/jsonpath.js","../src/jsonpath-browser.js"],"sourcesContent":["/* eslint-disable camelcase, unicorn/prefer-string-replace-all,\n  unicorn/prefer-at */\nconst {hasOwnProperty: hasOwnProp} = Object.prototype;\n\n/**\n * @typedef {null|boolean|number|string|PlainObject|GenericArray} JSONObject\n */\n\n/**\n * @typedef {any} AnyItem\n */\n\n/**\n * @typedef {any} AnyResult\n */\n\n/**\n * Copies array and then pushes item into it.\n * @param {GenericArray} arr Array to copy and into which to push\n * @param {AnyItem} item Array item to add (to end)\n * @returns {GenericArray} Copy of the original array\n */\nfunction push (arr, item) {\n    arr = arr.slice();\n    arr.push(item);\n    return arr;\n}\n/**\n * Copies array and then unshifts item into it.\n * @param {AnyItem} item Array item to add (to beginning)\n * @param {GenericArray} arr Array to copy and into which to unshift\n * @returns {GenericArray} Copy of the original array\n */\nfunction unshift (item, arr) {\n    arr = arr.slice();\n    arr.unshift(item);\n    return arr;\n}\n\n/**\n * Caught when JSONPath is used without `new` but rethrown if with `new`\n * @extends Error\n */\nclass NewError extends Error {\n    /**\n     * @param {AnyResult} value The evaluated scalar value\n     */\n    constructor (value) {\n        super(\n            'JSONPath should not be called with \"new\" (it prevents return ' +\n            'of (unwrapped) scalar values)'\n        );\n        this.avoidNew = true;\n        this.value = value;\n        this.name = 'NewError';\n    }\n}\n\n/**\n* @typedef {PlainObject} ReturnObject\n* @property {string} path\n* @property {JSONObject} value\n* @property {PlainObject|GenericArray} parent\n* @property {string} parentProperty\n*/\n\n/**\n* @callback JSONPathCallback\n* @param {string|PlainObject} preferredOutput\n* @param {\"value\"|\"property\"} type\n* @param {ReturnObject} fullRetObj\n* @returns {void}\n*/\n\n/**\n* @callback OtherTypeCallback\n* @param {JSONObject} val\n* @param {string} path\n* @param {PlainObject|GenericArray} parent\n* @param {string} parentPropName\n* @returns {boolean}\n*/\n\n/* eslint-disable @stylistic/max-len -- Can make multiline type after https://github.com/syavorsky/comment-parser/issues/109 */\n/**\n * @typedef {PlainObject} JSONPathOptions\n * @property {JSON} json\n * @property {string|string[]} path\n * @property {\"value\"|\"path\"|\"pointer\"|\"parent\"|\"parentProperty\"|\"all\"} [resultType=\"value\"]\n * @property {boolean} [flatten=false]\n * @property {boolean} [wrap=true]\n * @property {PlainObject} [sandbox={}]\n * @property {boolean} [preventEval=false]\n * @property {PlainObject|GenericArray|null} [parent=null]\n * @property {string|null} [parentProperty=null]\n * @property {JSONPathCallback} [callback]\n * @property {OtherTypeCallback} [otherTypeCallback] Defaults to\n *   function which throws on encountering `@other`\n * @property {boolean} [autostart=true]\n */\n/* eslint-enable @stylistic/max-len -- Can make multiline type after https://github.com/syavorsky/comment-parser/issues/109 */\n\n/**\n * @param {string|JSONPathOptions} opts If a string, will be treated as `expr`\n * @param {string} [expr] JSON path to evaluate\n * @param {JSON} [obj] JSON object to evaluate against\n * @param {JSONPathCallback} [callback] Passed 3 arguments: 1) desired payload\n *     per `resultType`, 2) `\"value\"|\"property\"`, 3) Full returned object with\n *     all payloads\n * @param {OtherTypeCallback} [otherTypeCallback] If `@other()` is at the end\n *   of one's query, this will be invoked with the value of the item, its\n *   path, its parent, and its parent's property name, and it should return\n *   a boolean indicating whether the supplied value belongs to the \"other\"\n *   type or not (or it may handle transformations and return `false`).\n * @returns {JSONPath}\n * @class\n */\nfunction JSONPath (opts, expr, obj, callback, otherTypeCallback) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!(this instanceof JSONPath)) {\n        try {\n            return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\n        } catch (e) {\n            if (!e.avoidNew) {\n                throw e;\n            }\n            return e.value;\n        }\n    }\n\n    if (typeof opts === 'string') {\n        otherTypeCallback = callback;\n        callback = obj;\n        obj = expr;\n        expr = opts;\n        opts = null;\n    }\n    const optObj = opts && typeof opts === 'object';\n    opts = opts || {};\n    this.json = opts.json || obj;\n    this.path = opts.path || expr;\n    this.resultType = opts.resultType || 'value';\n    this.flatten = opts.flatten || false;\n    this.wrap = hasOwnProp.call(opts, 'wrap') ? opts.wrap : true;\n    this.sandbox = opts.sandbox || {};\n    this.preventEval = opts.preventEval || false;\n    this.parent = opts.parent || null;\n    this.parentProperty = opts.parentProperty || null;\n    this.callback = opts.callback || callback || null;\n    this.otherTypeCallback = opts.otherTypeCallback ||\n        otherTypeCallback ||\n        function () {\n            throw new TypeError(\n                'You must supply an otherTypeCallback callback option ' +\n                'with the @other() operator.'\n            );\n        };\n\n    if (opts.autostart !== false) {\n        const args = {\n            path: (optObj ? opts.path : expr)\n        };\n        if (!optObj) {\n            args.json = obj;\n        } else if ('json' in opts) {\n            args.json = opts.json;\n        }\n        const ret = this.evaluate(args);\n        if (!ret || typeof ret !== 'object') {\n            throw new NewError(ret);\n        }\n        return ret;\n    }\n}\n\n// PUBLIC METHODS\nJSONPath.prototype.evaluate = function (\n    expr, json, callback, otherTypeCallback\n) {\n    let currParent = this.parent,\n        currParentProperty = this.parentProperty;\n    let {flatten, wrap} = this;\n\n    this.currResultType = this.resultType;\n    this.currPreventEval = this.preventEval;\n    this.currSandbox = this.sandbox;\n    callback = callback || this.callback;\n    this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\n\n    json = json || this.json;\n    expr = expr || this.path;\n    if (expr && typeof expr === 'object' && !Array.isArray(expr)) {\n        if (!expr.path && expr.path !== '') {\n            throw new TypeError(\n                'You must supply a \"path\" property when providing an object ' +\n                'argument to JSONPath.evaluate().'\n            );\n        }\n        if (!(hasOwnProp.call(expr, 'json'))) {\n            throw new TypeError(\n                'You must supply a \"json\" property when providing an object ' +\n                'argument to JSONPath.evaluate().'\n            );\n        }\n        ({json} = expr);\n        flatten = hasOwnProp.call(expr, 'flatten') ? expr.flatten : flatten;\n        this.currResultType = hasOwnProp.call(expr, 'resultType')\n            ? expr.resultType\n            : this.currResultType;\n        this.currSandbox = hasOwnProp.call(expr, 'sandbox')\n            ? expr.sandbox\n            : this.currSandbox;\n        wrap = hasOwnProp.call(expr, 'wrap') ? expr.wrap : wrap;\n        this.currPreventEval = hasOwnProp.call(expr, 'preventEval')\n            ? expr.preventEval\n            : this.currPreventEval;\n        callback = hasOwnProp.call(expr, 'callback') ? expr.callback : callback;\n        this.currOtherTypeCallback = hasOwnProp.call(expr, 'otherTypeCallback')\n            ? expr.otherTypeCallback\n            : this.currOtherTypeCallback;\n        currParent = hasOwnProp.call(expr, 'parent') ? expr.parent : currParent;\n        currParentProperty = hasOwnProp.call(expr, 'parentProperty')\n            ? expr.parentProperty\n            : currParentProperty;\n        expr = expr.path;\n    }\n    currParent = currParent || null;\n    currParentProperty = currParentProperty || null;\n\n    if (Array.isArray(expr)) {\n        expr = JSONPath.toPathString(expr);\n    }\n    if ((!expr && expr !== '') || !json) {\n        return undefined;\n    }\n\n    const exprList = JSONPath.toPathArray(expr);\n    if (exprList[0] === '$' && exprList.length > 1) {\n        exprList.shift();\n    }\n    this._hasParentSelector = null;\n    const result = this\n        ._trace(\n            exprList, json, ['$'], currParent, currParentProperty, callback\n        )\n        .filter(function (ea) {\n            return ea && !ea.isParentSelector;\n        });\n\n    if (!result.length) {\n        return wrap ? [] : undefined;\n    }\n    if (!wrap && result.length === 1 && !result[0].hasArrExpr) {\n        return this._getPreferredOutput(result[0]);\n    }\n    return result.reduce((rslt, ea) => {\n        const valOrPath = this._getPreferredOutput(ea);\n        if (flatten && Array.isArray(valOrPath)) {\n            rslt = rslt.concat(valOrPath);\n        } else {\n            rslt.push(valOrPath);\n        }\n        return rslt;\n    }, []);\n};\n\n// PRIVATE METHODS\n\nJSONPath.prototype._getPreferredOutput = function (ea) {\n    const resultType = this.currResultType;\n    switch (resultType) {\n    case 'all': {\n        const path = Array.isArray(ea.path)\n            ? ea.path\n            : JSONPath.toPathArray(ea.path);\n        ea.pointer = JSONPath.toPointer(path);\n        ea.path = typeof ea.path === 'string'\n            ? ea.path\n            : JSONPath.toPathString(ea.path);\n        return ea;\n    } case 'value': case 'parent': case 'parentProperty':\n        return ea[resultType];\n    case 'path':\n        return JSONPath.toPathString(ea[resultType]);\n    case 'pointer':\n        return JSONPath.toPointer(ea.path);\n    default:\n        throw new TypeError('Unknown result type');\n    }\n};\n\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\n    if (callback) {\n        const preferredOutput = this._getPreferredOutput(fullRetObj);\n        fullRetObj.path = typeof fullRetObj.path === 'string'\n            ? fullRetObj.path\n            : JSONPath.toPathString(fullRetObj.path);\n        // eslint-disable-next-line n/callback-return\n        callback(preferredOutput, type, fullRetObj);\n    }\n};\n\n/**\n *\n * @param {string} expr\n * @param {JSONObject} val\n * @param {string} path\n * @param {PlainObject|GenericArray} parent\n * @param {string} parentPropName\n * @param {JSONPathCallback} callback\n * @param {boolean} hasArrExpr\n * @param {boolean} literalPriority\n * @returns {ReturnObject|ReturnObject[]}\n */\nJSONPath.prototype._trace = function (\n    expr, val, path, parent, parentPropName, callback, hasArrExpr,\n    literalPriority\n) {\n    // No expr to follow? return path and value as the result of\n    //  this trace branch\n    let retObj;\n    if (!expr.length) {\n        retObj = {\n            path,\n            value: val,\n            parent,\n            parentProperty: parentPropName,\n            hasArrExpr\n        };\n        this._handleCallback(retObj, callback, 'value');\n        return retObj;\n    }\n\n    const loc = expr[0], x = expr.slice(1);\n\n    // We need to gather the return value of recursive trace calls in order to\n    // do the parent sel computation.\n    const ret = [];\n    /**\n     *\n     * @param {ReturnObject|ReturnObject[]} elems\n     * @returns {void}\n     */\n    function addRet (elems) {\n        if (Array.isArray(elems)) {\n            // This was causing excessive stack size in Node (with or\n            //  without Babel) against our performance test:\n            //  `ret.push(...elems);`\n            elems.forEach((t) => {\n                ret.push(t);\n            });\n        } else {\n            ret.push(elems);\n        }\n    }\n    if ((typeof loc !== 'string' || literalPriority) && val &&\n        hasOwnProp.call(val, loc)\n    ) { // simple case--directly follow property\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback,\n            hasArrExpr));\n    // eslint-disable-next-line unicorn/prefer-switch -- Part of larger `if`\n    } else if (loc === '*') { // all child properties\n        this._walk(val, (m) => {\n            addRet(this._trace(\n                x, val[m], push(path, m), val, m, callback, true, true\n            ));\n        });\n    } else if (loc === '..') { // all descendent parent properties\n        // Check remaining expression with val's immediate children\n        addRet(\n            this._trace(x, val, path, parent, parentPropName, callback,\n                hasArrExpr)\n        );\n        this._walk(val, (m) => {\n            // We don't join m and x here because we only want parents,\n            //   not scalar values\n            if (typeof val[m] === 'object') {\n                // Keep going with recursive descent on val's\n                //   object children\n                addRet(this._trace(\n                    expr.slice(), val[m], push(path, m), val, m, callback, true\n                ));\n            }\n        });\n    // The parent sel computation is handled in the frame above using the\n    // ancestor object of val\n    } else if (loc === '^') {\n        // This is not a final endpoint, so we do not invoke the callback here\n        this._hasParentSelector = true;\n        return {\n            path: path.slice(0, -1),\n            expr: x,\n            isParentSelector: true\n        };\n    } else if (loc === '~') { // property name\n        retObj = {\n            path: push(path, loc),\n            value: parentPropName,\n            parent,\n            parentProperty: null\n        };\n        this._handleCallback(retObj, callback, 'property');\n        return retObj;\n    } else if (loc === '$') { // root only\n        addRet(this._trace(x, val, path, null, null, callback, hasArrExpr));\n    } else if ((/^(-?\\d*):(-?\\d*):?(\\d*)$/u).test(loc)) { // [start:end:step]  Python slice syntax\n        addRet(\n            this._slice(loc, x, val, path, parent, parentPropName, callback)\n        );\n    } else if (loc.indexOf('?(') === 0) { // [?(expr)] (filtering)\n        if (this.currPreventEval) {\n            throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\n        }\n        const safeLoc = loc.replace(/^\\?\\((.*?)\\)$/u, '$1');\n        // check for a nested filter expression\n        const nested = (/@.?([^?]*)[['](\\??\\(.*?\\))(?!.\\)\\])[\\]']/gu).exec(safeLoc);\n        if (nested) {\n            // find if there are matches in the nested expression\n            // add them to the result set if there is at least one match\n            this._walk(val, (m) => {\n                const npath = [nested[2]];\n                const nvalue = nested[1]\n                    ? val[m][nested[1]]\n                    : val[m];\n                const filterResults = this._trace(npath, nvalue, path,\n                    parent, parentPropName, callback, true);\n                if (filterResults.length > 0) {\n                    addRet(this._trace(x, val[m], push(path, m), val,\n                        m, callback, true));\n                }\n            });\n        } else {\n            this._walk(val, (m) => {\n                if (this._eval(safeLoc, val[m], m, path, parent,\n                    parentPropName)) {\n                    addRet(this._trace(x, val[m], push(path, m), val, m,\n                        callback, true));\n                }\n            });\n        }\n    } else if (loc[0] === '(') { // [(expr)] (dynamic property/index)\n        if (this.currPreventEval) {\n            throw new Error('Eval [(expr)] prevented in JSONPath expression.');\n        }\n        // As this will resolve to a property name (but we don't know it\n        //  yet), property and parent information is relative to the\n        //  parent of the property to which this expression will resolve\n        addRet(this._trace(unshift(\n            this._eval(\n                loc, val, path[path.length - 1],\n                path.slice(0, -1), parent, parentPropName\n            ),\n            x\n        ), val, path, parent, parentPropName, callback, hasArrExpr));\n    } else if (loc[0] === '@') { // value type: @boolean(), etc.\n        let addType = false;\n        const valueType = loc.slice(1, -2);\n        switch (valueType) {\n        case 'scalar':\n            if (!val || !(['object', 'function'].includes(typeof val))) {\n                addType = true;\n            }\n            break;\n        case 'boolean': case 'string': case 'undefined': case 'function':\n            if (typeof val === valueType) {\n                addType = true;\n            }\n            break;\n        case 'integer':\n            if (Number.isFinite(val) && !(val % 1)) {\n                addType = true;\n            }\n            break;\n        case 'number':\n            if (Number.isFinite(val)) {\n                addType = true;\n            }\n            break;\n        case 'nonFinite':\n            if (typeof val === 'number' && !Number.isFinite(val)) {\n                addType = true;\n            }\n            break;\n        case 'object':\n            if (val && typeof val === valueType) {\n                addType = true;\n            }\n            break;\n        case 'array':\n            if (Array.isArray(val)) {\n                addType = true;\n            }\n            break;\n        case 'other':\n            addType = this.currOtherTypeCallback(\n                val, path, parent, parentPropName\n            );\n            break;\n        case 'null':\n            if (val === null) {\n                addType = true;\n            }\n            break;\n        /* c8 ignore next 2 */\n        default:\n            throw new TypeError('Unknown value type ' + valueType);\n        }\n        if (addType) {\n            retObj = {path, value: val, parent, parentProperty: parentPropName};\n            this._handleCallback(retObj, callback, 'value');\n            return retObj;\n        }\n    // `-escaped property\n    } else if (loc[0] === '`' && val && hasOwnProp.call(val, loc.slice(1))) {\n        const locProp = loc.slice(1);\n        addRet(this._trace(\n            x, val[locProp], push(path, locProp), val, locProp, callback,\n            hasArrExpr, true\n        ));\n    } else if (loc.includes(',')) { // [name1,name2,...]\n        const parts = loc.split(',');\n        for (const part of parts) {\n            addRet(this._trace(\n                unshift(part, x), val, path, parent, parentPropName, callback,\n                true\n            ));\n        }\n    // simple case--directly follow property\n    } else if (\n        !literalPriority && val && hasOwnProp.call(val, loc)\n    ) {\n        addRet(\n            this._trace(x, val[loc], push(path, loc), val, loc, callback,\n                hasArrExpr, true)\n        );\n    }\n\n    // We check the resulting values for parent selections. For parent\n    // selections we discard the value object and continue the trace with the\n    // current val object\n    if (this._hasParentSelector) {\n        for (let t = 0; t < ret.length; t++) {\n            const rett = ret[t];\n            if (rett && rett.isParentSelector) {\n                const tmp = this._trace(\n                    rett.expr, val, rett.path, parent, parentPropName, callback,\n                    hasArrExpr\n                );\n                if (Array.isArray(tmp)) {\n                    ret[t] = tmp[0];\n                    const tl = tmp.length;\n                    for (let tt = 1; tt < tl; tt++) {\n                        t++;\n                        ret.splice(t, 0, tmp[tt]);\n                    }\n                } else {\n                    ret[t] = tmp;\n                }\n            }\n        }\n    }\n    return ret;\n};\n\nJSONPath.prototype._walk = function (val, f) {\n    if (Array.isArray(val)) {\n        const n = val.length;\n        for (let i = 0; i < n; i++) {\n            f(i);\n        }\n    } else if (val && typeof val === 'object') {\n        Object.keys(val).forEach((m) => {\n            f(m);\n        });\n    }\n};\n\nJSONPath.prototype._slice = function (\n    loc, expr, val, path, parent, parentPropName, callback\n) {\n    if (!Array.isArray(val)) {\n        return undefined;\n    }\n    const len = val.length, parts = loc.split(':'),\n        step = (parts[2] && Number.parseInt(parts[2])) || 1;\n    let start = (parts[0] && Number.parseInt(parts[0])) || 0,\n        end = (parts[1] && Number.parseInt(parts[1])) || len;\n    start = (start < 0) ? Math.max(0, start + len) : Math.min(len, start);\n    end = (end < 0) ? Math.max(0, end + len) : Math.min(len, end);\n    const ret = [];\n    for (let i = start; i < end; i += step) {\n        const tmp = this._trace(\n            unshift(i, expr), val, path, parent, parentPropName, callback, true\n        );\n        // Should only be possible to be an array here since first part of\n        //   ``unshift(i, expr)` passed in above would not be empty, nor `~`,\n        //     nor begin with `@` (as could return objects)\n        // This was causing excessive stack size in Node (with or\n        //  without Babel) against our performance test: `ret.push(...tmp);`\n        tmp.forEach((t) => {\n            ret.push(t);\n        });\n    }\n    return ret;\n};\n\nJSONPath.prototype._eval = function (\n    code, _v, _vname, path, parent, parentPropName\n) {\n    this.currSandbox._$_parentProperty = parentPropName;\n    this.currSandbox._$_parent = parent;\n    this.currSandbox._$_property = _vname;\n    this.currSandbox._$_root = this.json;\n    this.currSandbox._$_v = _v;\n\n    const containsPath = code.includes('@path');\n    if (containsPath) {\n        this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\n    }\n\n    const scriptCacheKey = 'script:' + code;\n    if (!JSONPath.cache[scriptCacheKey]) {\n        let script = code\n            .replace(/@parentProperty/gu, '_$_parentProperty')\n            .replace(/@parent/gu, '_$_parent')\n            .replace(/@property/gu, '_$_property')\n            .replace(/@root/gu, '_$_root')\n            .replace(/@([.\\s)[])/gu, '_$_v$1');\n        if (containsPath) {\n            script = script.replace(/@path/gu, '_$_path');\n        }\n\n        JSONPath.cache[scriptCacheKey] = new this.vm.Script(script);\n    }\n\n    try {\n        return JSONPath.cache[scriptCacheKey].runInNewContext(this.currSandbox);\n    } catch (e) {\n        throw new Error('jsonPath: ' + e.message + ': ' + code);\n    }\n};\n\n// PUBLIC CLASS PROPERTIES AND METHODS\n\n// Could store the cache object itself\nJSONPath.cache = {};\n\n/**\n * @param {string[]} pathArr Array to convert\n * @returns {string} The path string\n */\nJSONPath.toPathString = function (pathArr) {\n    const x = pathArr, n = x.length;\n    let p = '$';\n    for (let i = 1; i < n; i++) {\n        if (!(/^(~|\\^|@.*?\\(\\))$/u).test(x[i])) {\n            p += (/^[0-9*]+$/u).test(x[i]) ? ('[' + x[i] + ']') : (\"['\" + x[i] + \"']\");\n        }\n    }\n    return p;\n};\n\n/**\n * @param {string} pointer JSON Path\n * @returns {string} JSON Pointer\n */\nJSONPath.toPointer = function (pointer) {\n    const x = pointer, n = x.length;\n    let p = '';\n    for (let i = 1; i < n; i++) {\n        if (!(/^(~|\\^|@.*?\\(\\))$/u).test(x[i])) {\n            p += '/' + x[i].toString()\n                .replace(/~/gu, '~0')\n                .replace(/\\//gu, '~1');\n        }\n    }\n    return p;\n};\n\n/**\n * @param {string} expr Expression to convert\n * @returns {string[]}\n */\nJSONPath.toPathArray = function (expr) {\n    const {cache} = JSONPath;\n    if (cache[expr]) {\n        return cache[expr].concat();\n    }\n    const subx = [];\n    const normalized = expr\n        // Properties\n        .replace(\n            /@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/gu,\n            ';$&;'\n        )\n        // Parenthetical evaluations (filtering and otherwise), directly\n        //   within brackets or single quotes\n        .replace(/[['](\\??\\(.*?\\))[\\]'](?!.\\])/gu, function ($0, $1) {\n            return '[#' + (subx.push($1) - 1) + ']';\n        })\n        // Escape periods and tildes within properties\n        .replace(/\\[['\"]([^'\\]]*)['\"]\\]/gu, function ($0, prop) {\n            return \"['\" + prop\n                .replace(/\\./gu, '%@%')\n                .replace(/~/gu, '%%@@%%') +\n                \"']\";\n        })\n        // Properties operator\n        .replace(/~/gu, ';~;')\n        // Split by property boundaries\n        .replace(/['\"]?\\.['\"]?(?![^[]*\\])|\\[['\"]?/gu, ';')\n        // Reinsert periods within properties\n        .replace(/%@%/gu, '.')\n        // Reinsert tildes within properties\n        .replace(/%%@@%%/gu, '~')\n        // Parent\n        .replace(/(?:;)?(\\^+)(?:;)?/gu, function ($0, ups) {\n            return ';' + ups.split('').join(';') + ';';\n        })\n        // Descendents\n        .replace(/;;;|;;/gu, ';..;')\n        // Remove trailing\n        .replace(/;$|'?\\]|'$/gu, '');\n\n    const exprList = normalized.split(';').map(function (exp) {\n        const match = exp.match(/#(\\d+)/u);\n        return !match || !match[1] ? exp : subx[match[1]];\n    });\n    cache[expr] = exprList;\n    return cache[expr].concat();\n};\n\nexport {JSONPath};\n","import {JSONPath} from './jsonpath.js';\n\n/**\n * @typedef {any} ContextItem\n */\n\n/**\n * @typedef {any} EvaluatedResult\n */\n\n/**\n * @callback ConditionCallback\n * @param {ContextItem} item\n * @returns {boolean}\n */\n\n/**\n * Copy items out of one array into another.\n * @param {GenericArray} source Array with items to copy\n * @param {GenericArray} target Array to which to copy\n * @param {ConditionCallback} conditionCb Callback passed the current item;\n *     will move item if evaluates to `true`\n * @returns {void}\n */\nconst moveToAnotherArray = function (source, target, conditionCb) {\n    const il = source.length;\n    for (let i = 0; i < il; i++) {\n        const item = source[i];\n        if (conditionCb(item)) {\n            target.push(source.splice(i--, 1)[0]);\n        }\n    }\n};\n\n/**\n * In-browser replacement for NodeJS' VM.Script.\n */\nclass Script {\n    /**\n     * @param {string} expr Expression to evaluate\n     */\n    constructor (expr) {\n        this.code = expr;\n    }\n\n    /**\n     * @param {PlainObject} context Object whose items will be added\n     *   to evaluation\n     * @returns {EvaluatedResult} Result of evaluated code\n     */\n    runInNewContext (context) {\n        let expr = this.code;\n        const keys = Object.keys(context);\n        const funcs = [];\n        moveToAnotherArray(keys, funcs, (key) => {\n            return typeof context[key] === 'function';\n        });\n        const values = keys.map((vr) => {\n            return context[vr];\n        });\n\n        const funcString = funcs.reduce((s, func) => {\n            let fString = context[func].toString();\n            if (!(/function/u).test(fString)) {\n                fString = 'function ' + fString;\n            }\n            return 'var ' + func + '=' + fString + ';' + s;\n        }, '');\n\n        expr = funcString + expr;\n\n        // Mitigate http://perfectionkills.com/global-eval-what-are-the-options/#new_function\n        if (!(/(['\"])use strict\\1/u).test(expr) &&\n            !keys.includes('arguments')\n        ) {\n            expr = 'var arguments = undefined;' + expr;\n        }\n\n        // Remove last semi so `return` will be inserted before\n        //  the previous one instead, allowing for the return\n        //  of a bare ending expression\n        expr = expr.replace(/;\\s*$/u, '');\n\n        // Insert `return`\n        const lastStatementEnd = expr.lastIndexOf(';');\n        const code = (lastStatementEnd > -1\n            ? expr.slice(0, lastStatementEnd + 1) +\n                ' return ' + expr.slice(lastStatementEnd + 1)\n            : ' return ' + expr);\n\n        // eslint-disable-next-line no-new-func\n        return (new Function(...keys, code))(...values);\n    }\n}\n\nJSONPath.prototype.vm = {\n    Script\n};\n\nexport {JSONPath};\n"],"names":["hasOwnProp","Object","prototype","hasOwnProperty","push","arr","item","slice","unshift","NewError","_Error","value","_this","_classCallCheck","_callSuper","this","avoidNew","name","_inherits","_createClass","_wrapNativeSuper","Error","JSONPath","opts","expr","obj","callback","otherTypeCallback","e","optObj","_typeof","json","path","resultType","flatten","wrap","call","sandbox","preventEval","parent","parentProperty","TypeError","autostart","args","ret","evaluate","_this2","currParent","currParentProperty","currResultType","currPreventEval","currSandbox","currOtherTypeCallback","Array","isArray","toPathString","exprList","toPathArray","length","shift","_hasParentSelector","result","_trace","filter","ea","isParentSelector","hasArrExpr","reduce","rslt","valOrPath","_getPreferredOutput","concat","undefined","pointer","toPointer","_handleCallback","fullRetObj","type","preferredOutput","val","parentPropName","literalPriority","retObj","_this3","loc","x","addRet","elems","forEach","t","_walk","m","test","_slice","indexOf","safeLoc","replace","nested","exec","npath","nvalue","_eval","addType","valueType","includes","Number","isFinite","locProp","_step","_iterator","_createForOfIteratorHelper","split","s","n","done","part","err","f","rett","tmp","tl","tt","splice","i","keys","len","parts","step","parseInt","start","end","Math","max","min","code","_v","_vname","_$_parentProperty","_$_parent","_$_property","_$_root","_$_v","containsPath","_$_path","scriptCacheKey","cache","script","vm","Script","runInNewContext","message","pathArr","p","toString","subx","$0","$1","prop","ups","join","map","exp","match","key","context","funcs","source","target","conditionCb","il","moveToAnotherArray","values","vr","funcString","func","fString","lastStatementEnd","lastIndexOf","_construct","Function","apply","_toConsumableArray"],"mappings":"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"}